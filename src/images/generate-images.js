// scripts/generate-images.js
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const imagesDir = path.resolve(__dirname, '.'); // folder svgs
const outputFile = path.resolve(__dirname, './index.ts');
const outputImageBaseFile = path.resolve(__dirname, './ImageBase.tsx');

const files = fs.readdirSync(imagesDir);

// Filter image files and ignore @2x/@3x in the name
const imageFiles = files
  .filter(file => /\.(png|jpe?g|svg)$/i.test(file))
  .filter(file => !/@[23]x\./.test(file)); // ignore @2x/@3x files

const exportLines = imageFiles.map(file => {
  let key = path
    .basename(file, path.extname(file))
    .replace(/@[23]x$/, '')
    .replace(/[\s-]/g, '_')
    .toLowerCase();
  return `  ${key}: require('./${file}')`; // note './images/' vì file index nằm ngoài folder images
});

// thêm comment auto-generated
const headerComment = `// ⚠️ This file is auto-generated by generate-images.js
// Do not edit this file manually.\n`;

// tạo export object
const exports = `export const images = {\n${exportLines.join(',\n')}\n};`;

// tạo type
const type = `export type ImageName = keyof typeof images;`;
const content = `${headerComment}\n${exports}\n\n${type}\n`;

fs.writeFileSync(outputFile, content, 'utf8');
console.log(`✅ Generated ${outputFile} with ${imageFiles.length} images.`);

// tạo component ImageBase
const component = `import React from 'react';
import { Image, type ImageProps } from 'react-native';
import { images, type ImageName } from './index.ts';
type ImageBaseProps =
  | {
      name: ImageName;
      width?: number;
      height?: number;
      color?: string;
      size?: number;
      uri?: string;
    }
  | {
      name?: never;
      width?: number;
      height?: number;
      color?: string;
      size?: number;
      uri?: string;
    };

export const ImageBase: React.FC<
  ImageBaseProps & Omit<ImageProps, 'uri' | 'size' | 'width' | 'height'>
> = ({ name, uri, size, width = 24, height = 24, color, ...rest }) => {
  return (
    <Image
      source={uri ? { uri } : images[name!]}
      style={{ width: size || width, height: size || height, tintColor: color }}
      {...rest}
    />
  );
};
`;
fs.writeFileSync(
  outputImageBaseFile,
  `${headerComment}\n${component}\n`,
  'utf8',
);

console.log(
  `✅ Generated ${outputImageBaseFile} with ${files.length} SVG icons.`,
);
